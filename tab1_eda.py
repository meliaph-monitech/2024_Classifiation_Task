# -*- coding: utf-8 -*-
"""tab1_eda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jj5pRgbTekBNKa4onIOeOHYbrgJGH4h4
"""

import streamlit as st
import pandas as pd
import os

# Function to preprocess data: remove fourth column and filter based on selected column
def preprocess_data(df, filter_column, filter_threshold):
    # Remove the fourth column
    df = df.iloc[:, :-1]

    # Filter data based on selected column and threshold
    filtered_df = df[df[filter_column].astype(float) > filter_threshold]

    return df, filtered_df

# Streamlit App for Data Preprocessing
st.title('Welding Data Preprocessing')

# Step 1: Upload multiple CSV files
uploaded_files = st.file_uploader("Upload CSV files", accept_multiple_files=True, type=['csv'])

if uploaded_files:
    st.write(f"Uploaded {len(uploaded_files)} file(s).")

    # Read each file into a DataFrame and store them in a dictionary
    dataframes = {file.name: pd.read_csv(file) for file in uploaded_files}

    # Step 2: Select the column for filtering (NIR, VIS, or LO)
    st.write("Commonly the data contains the following columns: NIR, VIS, LO.")
    columns = ['NIR', 'VIS', 'LO']  # We can assume these are always the same
    selected_column = st.selectbox("Select the column to filter on", columns)

    # Step 3: Set the threshold for filtering
    filter_threshold = st.number_input(f"Set the threshold for {selected_column}", min_value=0.0, max_value=1.0, step=0.01, value=0.45)

    # Step 4: Select a file to visualize if multiple files are uploaded
    if len(uploaded_files) > 1:
        selected_file = st.selectbox("Select a file to visualize", [file.name for file in uploaded_files])
    else:
        selected_file = uploaded_files[0].name

    # Preprocess data for the selected file
    st.write(f"Displaying data from: {selected_file}")
    df = dataframes[selected_file]

    # Step 5: Display the data before filtering
    st.write("### Data before filtering")
    df_before, df_filtered = preprocess_data(df, selected_column, filter_threshold)
    st.line_chart(df_before[selected_column])  # Visualize the data before filtering

    # Step 6: Display the data after filtering
    st.write("### Data after filtering")
    st.line_chart(df_filtered[selected_column])  # Visualize the data after filtering